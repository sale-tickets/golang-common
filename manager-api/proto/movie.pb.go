// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v3.21.12
// source: manager-api/api/movie.proto

package manager_api

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateMovieReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ctx           *Context               `protobuf:"bytes,1,opt,name=ctx,proto3" json:"ctx,omitempty"`
	Data          *MovieModel            `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateMovieReq) Reset() {
	*x = CreateMovieReq{}
	mi := &file_manager_api_api_movie_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateMovieReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMovieReq) ProtoMessage() {}

func (x *CreateMovieReq) ProtoReflect() protoreflect.Message {
	mi := &file_manager_api_api_movie_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMovieReq.ProtoReflect.Descriptor instead.
func (*CreateMovieReq) Descriptor() ([]byte, []int) {
	return file_manager_api_api_movie_proto_rawDescGZIP(), []int{0}
}

func (x *CreateMovieReq) GetCtx() *Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *CreateMovieReq) GetData() *MovieModel {
	if x != nil {
		return x.Data
	}
	return nil
}

type CreateMovieRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          *MovieModel            `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateMovieRes) Reset() {
	*x = CreateMovieRes{}
	mi := &file_manager_api_api_movie_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateMovieRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMovieRes) ProtoMessage() {}

func (x *CreateMovieRes) ProtoReflect() protoreflect.Message {
	mi := &file_manager_api_api_movie_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMovieRes.ProtoReflect.Descriptor instead.
func (*CreateMovieRes) Descriptor() ([]byte, []int) {
	return file_manager_api_api_movie_proto_rawDescGZIP(), []int{1}
}

func (x *CreateMovieRes) GetData() *MovieModel {
	if x != nil {
		return x.Data
	}
	return nil
}

type UpdateMovieReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ctx           *Context               `protobuf:"bytes,1,opt,name=ctx,proto3" json:"ctx,omitempty"`
	Id            string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Data          *MovieModel            `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateMovieReq) Reset() {
	*x = UpdateMovieReq{}
	mi := &file_manager_api_api_movie_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateMovieReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMovieReq) ProtoMessage() {}

func (x *UpdateMovieReq) ProtoReflect() protoreflect.Message {
	mi := &file_manager_api_api_movie_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMovieReq.ProtoReflect.Descriptor instead.
func (*UpdateMovieReq) Descriptor() ([]byte, []int) {
	return file_manager_api_api_movie_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateMovieReq) GetCtx() *Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *UpdateMovieReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateMovieReq) GetData() *MovieModel {
	if x != nil {
		return x.Data
	}
	return nil
}

type UpdateMovieRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          *MovieModel            `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateMovieRes) Reset() {
	*x = UpdateMovieRes{}
	mi := &file_manager_api_api_movie_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateMovieRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMovieRes) ProtoMessage() {}

func (x *UpdateMovieRes) ProtoReflect() protoreflect.Message {
	mi := &file_manager_api_api_movie_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMovieRes.ProtoReflect.Descriptor instead.
func (*UpdateMovieRes) Descriptor() ([]byte, []int) {
	return file_manager_api_api_movie_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateMovieRes) GetData() *MovieModel {
	if x != nil {
		return x.Data
	}
	return nil
}

type MovieFilter struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	CategoryId    []string               `protobuf:"bytes,2,rep,name=category_id,json=categoryId,proto3" json:"category_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MovieFilter) Reset() {
	*x = MovieFilter{}
	mi := &file_manager_api_api_movie_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MovieFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MovieFilter) ProtoMessage() {}

func (x *MovieFilter) ProtoReflect() protoreflect.Message {
	mi := &file_manager_api_api_movie_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MovieFilter.ProtoReflect.Descriptor instead.
func (*MovieFilter) Descriptor() ([]byte, []int) {
	return file_manager_api_api_movie_proto_rawDescGZIP(), []int{4}
}

func (x *MovieFilter) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MovieFilter) GetCategoryId() []string {
	if x != nil {
		return x.CategoryId
	}
	return nil
}

type ListMovieReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FilterBase    *FilterBase            `protobuf:"bytes,1,opt,name=filter_base,json=filterBase,proto3" json:"filter_base,omitempty"`
	Filter        *MovieFilter           `protobuf:"bytes,2,opt,name=filter,proto3" json:"filter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListMovieReq) Reset() {
	*x = ListMovieReq{}
	mi := &file_manager_api_api_movie_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListMovieReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMovieReq) ProtoMessage() {}

func (x *ListMovieReq) ProtoReflect() protoreflect.Message {
	mi := &file_manager_api_api_movie_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMovieReq.ProtoReflect.Descriptor instead.
func (*ListMovieReq) Descriptor() ([]byte, []int) {
	return file_manager_api_api_movie_proto_rawDescGZIP(), []int{5}
}

func (x *ListMovieReq) GetFilterBase() *FilterBase {
	if x != nil {
		return x.FilterBase
	}
	return nil
}

func (x *ListMovieReq) GetFilter() *MovieFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

type ListMovieRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          []*MovieModel          `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListMovieRes) Reset() {
	*x = ListMovieRes{}
	mi := &file_manager_api_api_movie_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListMovieRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMovieRes) ProtoMessage() {}

func (x *ListMovieRes) ProtoReflect() protoreflect.Message {
	mi := &file_manager_api_api_movie_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMovieRes.ProtoReflect.Descriptor instead.
func (*ListMovieRes) Descriptor() ([]byte, []int) {
	return file_manager_api_api_movie_proto_rawDescGZIP(), []int{6}
}

func (x *ListMovieRes) GetData() []*MovieModel {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_manager_api_api_movie_proto protoreflect.FileDescriptor

const file_manager_api_api_movie_proto_rawDesc = "" +
	"\n" +
	"\x1bmanager-api/api/movie.proto\x12\x05movie\x1a\x1cmanager-api/api/common.proto\x1a\x1bmanager-api/api/model.proto\x1a(third-party/google/api/annotations.proto\"Z\n" +
	"\x0eCreateMovieReq\x12!\n" +
	"\x03ctx\x18\x01 \x01(\v2\x0f.common.ContextR\x03ctx\x12%\n" +
	"\x04data\x18\x02 \x01(\v2\x11.model.MovieModelR\x04data\"7\n" +
	"\x0eCreateMovieRes\x12%\n" +
	"\x04data\x18\x01 \x01(\v2\x11.model.MovieModelR\x04data\"j\n" +
	"\x0eUpdateMovieReq\x12!\n" +
	"\x03ctx\x18\x01 \x01(\v2\x0f.common.ContextR\x03ctx\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\tR\x02id\x12%\n" +
	"\x04data\x18\x03 \x01(\v2\x11.model.MovieModelR\x04data\"7\n" +
	"\x0eUpdateMovieRes\x12%\n" +
	"\x04data\x18\x01 \x01(\v2\x11.model.MovieModelR\x04data\"B\n" +
	"\vMovieFilter\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1f\n" +
	"\vcategory_id\x18\x02 \x03(\tR\n" +
	"categoryId\"o\n" +
	"\fListMovieReq\x123\n" +
	"\vfilter_base\x18\x01 \x01(\v2\x12.common.FilterBaseR\n" +
	"filterBase\x12*\n" +
	"\x06filter\x18\x02 \x01(\v2\x12.movie.MovieFilterR\x06filter\"5\n" +
	"\fListMovieRes\x12%\n" +
	"\x04data\x18\x01 \x03(\v2\x11.model.MovieModelR\x04data2\x85\x02\n" +
	"\x05Movie\x12W\n" +
	"\x06Create\x12\x15.movie.CreateMovieReq\x1a\x15.movie.CreateMovieRes\"\x1f\x82\xd3\xe4\x93\x02\x19:\x01*\"\x14/api/v1/movie/create\x12W\n" +
	"\x06Update\x12\x15.movie.UpdateMovieReq\x1a\x15.movie.UpdateMovieRes\"\x1f\x82\xd3\xe4\x93\x02\x19:\x01*\x1a\x14/api/v1/movie/update\x12J\n" +
	"\x04List\x12\x13.movie.ListMovieReq\x1a\x13.movie.ListMovieRes\"\x18\x82\xd3\xe4\x93\x02\x12:\x01*\"\r/api/v1/movieB!Z\x1f./manager-api/proto;manager_apib\x06proto3"

var (
	file_manager_api_api_movie_proto_rawDescOnce sync.Once
	file_manager_api_api_movie_proto_rawDescData []byte
)

func file_manager_api_api_movie_proto_rawDescGZIP() []byte {
	file_manager_api_api_movie_proto_rawDescOnce.Do(func() {
		file_manager_api_api_movie_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_manager_api_api_movie_proto_rawDesc), len(file_manager_api_api_movie_proto_rawDesc)))
	})
	return file_manager_api_api_movie_proto_rawDescData
}

var file_manager_api_api_movie_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_manager_api_api_movie_proto_goTypes = []any{
	(*CreateMovieReq)(nil), // 0: movie.CreateMovieReq
	(*CreateMovieRes)(nil), // 1: movie.CreateMovieRes
	(*UpdateMovieReq)(nil), // 2: movie.UpdateMovieReq
	(*UpdateMovieRes)(nil), // 3: movie.UpdateMovieRes
	(*MovieFilter)(nil),    // 4: movie.MovieFilter
	(*ListMovieReq)(nil),   // 5: movie.ListMovieReq
	(*ListMovieRes)(nil),   // 6: movie.ListMovieRes
	(*Context)(nil),        // 7: common.Context
	(*MovieModel)(nil),     // 8: model.MovieModel
	(*FilterBase)(nil),     // 9: common.FilterBase
}
var file_manager_api_api_movie_proto_depIdxs = []int32{
	7,  // 0: movie.CreateMovieReq.ctx:type_name -> common.Context
	8,  // 1: movie.CreateMovieReq.data:type_name -> model.MovieModel
	8,  // 2: movie.CreateMovieRes.data:type_name -> model.MovieModel
	7,  // 3: movie.UpdateMovieReq.ctx:type_name -> common.Context
	8,  // 4: movie.UpdateMovieReq.data:type_name -> model.MovieModel
	8,  // 5: movie.UpdateMovieRes.data:type_name -> model.MovieModel
	9,  // 6: movie.ListMovieReq.filter_base:type_name -> common.FilterBase
	4,  // 7: movie.ListMovieReq.filter:type_name -> movie.MovieFilter
	8,  // 8: movie.ListMovieRes.data:type_name -> model.MovieModel
	0,  // 9: movie.Movie.Create:input_type -> movie.CreateMovieReq
	2,  // 10: movie.Movie.Update:input_type -> movie.UpdateMovieReq
	5,  // 11: movie.Movie.List:input_type -> movie.ListMovieReq
	1,  // 12: movie.Movie.Create:output_type -> movie.CreateMovieRes
	3,  // 13: movie.Movie.Update:output_type -> movie.UpdateMovieRes
	6,  // 14: movie.Movie.List:output_type -> movie.ListMovieRes
	12, // [12:15] is the sub-list for method output_type
	9,  // [9:12] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_manager_api_api_movie_proto_init() }
func file_manager_api_api_movie_proto_init() {
	if File_manager_api_api_movie_proto != nil {
		return
	}
	file_manager_api_api_common_proto_init()
	file_manager_api_api_model_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_manager_api_api_movie_proto_rawDesc), len(file_manager_api_api_movie_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_manager_api_api_movie_proto_goTypes,
		DependencyIndexes: file_manager_api_api_movie_proto_depIdxs,
		MessageInfos:      file_manager_api_api_movie_proto_msgTypes,
	}.Build()
	File_manager_api_api_movie_proto = out.File
	file_manager_api_api_movie_proto_goTypes = nil
	file_manager_api_api_movie_proto_depIdxs = nil
}
