{
  "swagger": "2.0",
  "info": {
    "title": "manager-api/api/cinema_room.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "CinemaRoomService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/v1/cinema-room": {
      "post": {
        "operationId": "CinemaRoomService_List",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cinema_roomListCinemaRoomRes"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cinema_roomListCinemaRoomReq"
            }
          }
        ],
        "tags": [
          "CinemaRoomService"
        ]
      }
    },
    "/api/v1/cinema-room/create": {
      "post": {
        "operationId": "CinemaRoomService_Create",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cinema_roomCreateCinemaRoomRes"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cinema_roomCreateCinemaRoomReq"
            }
          }
        ],
        "tags": [
          "CinemaRoomService"
        ]
      }
    },
    "/api/v1/cinema-room/update": {
      "put": {
        "operationId": "CinemaRoomService_Update",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cinema_roomUpdateCinemaRoomRes"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cinema_roomUpdateCinemaRoomReq"
            }
          }
        ],
        "tags": [
          "CinemaRoomService"
        ]
      }
    },
    "/api/v1/cinema-room/{uuid}": {
      "get": {
        "operationId": "CinemaRoomService_Detail",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cinema_roomDetailCinemaRoomRes"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "CinemaRoomService"
        ]
      }
    }
  },
  "definitions": {
    "cinema_roomCreateCinemaRoomReq": {
      "type": "object",
      "properties": {
        "movieTheaterId": {
          "type": "string"
        },
        "code": {
          "type": "string"
        }
      },
      "title": "api: create cinema room"
    },
    "cinema_roomCreateCinemaRoomRes": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        },
        "movieTheaterId": {
          "type": "string"
        },
        "code": {
          "type": "string"
        }
      }
    },
    "cinema_roomDetailCinemaRoomRes": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        },
        "movieTheaterId": {
          "type": "string"
        },
        "code": {
          "type": "string"
        },
        "createdAt": {
          "type": "string"
        },
        "updatedAt": {
          "type": "string"
        }
      }
    },
    "cinema_roomFilterCinemaRoom": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        }
      },
      "title": "api: list cinema room"
    },
    "cinema_roomListCinemaRoomReq": {
      "type": "object",
      "properties": {
        "filterBase": {
          "$ref": "#/definitions/commonFilterBase"
        },
        "filter": {
          "$ref": "#/definitions/cinema_roomFilterCinemaRoom"
        }
      }
    },
    "cinema_roomListCinemaRoomRes": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/modelCinemaRoomModel"
          }
        },
        "total": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "cinema_roomUpdateCinemaRoomReq": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        },
        "code": {
          "type": "string"
        }
      },
      "title": "api: update cinema room"
    },
    "cinema_roomUpdateCinemaRoomRes": {
      "type": "object"
    },
    "commonFilterBase": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "format": "int32"
        },
        "offset": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "modelCinemaRoomModel": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        },
        "movieTheaterId": {
          "type": "string"
        },
        "code": {
          "type": "string"
        },
        "createdAt": {
          "type": "string"
        },
        "updatedAt": {
          "type": "string"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}
